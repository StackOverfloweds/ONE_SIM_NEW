## Default settings for the simulation### Scenario settingsScenario.name = EpidemicCommunity - Haggle3Infocom5Scenario.simulateConnections = falseScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 274883## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 10# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 1000# Define 6 different node groupsScenario.nrofHostGroups = 1# Common settings for all groupsGroup.movementModel = StationaryMovement#Group.router = EpidemicRouter#Group.router = DecisionEngineRouter#DecisionEngineRouter.decisionEngine = community.BubbleRap#DecisionEngineRouter.lambda = 10#DecisionEngineRouter.gamma = 10#DecisionEngineRouter.familiarThreshold = 10#DecisionEngineRouter.decisionEngine = EpidemicWithCommunityRouter#DecisionEngineRouter.filePathKnowledge = testCommunity.txtGroup.bufferSize = 10MGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 720Group.nodeLocation = 10,10Group1.groupID = PGroup1.nrofHosts = 41Group1.router = EpidemicRouterGroup1.router = DecisionEngineRouterDecisionEngineRouter.decisionEngine = EpidemicWithCommunityRouterDecisionEngineRouter.filePathKnowledge = testCommunityHaggle.txtDecisionEngineRouter.nodeAddress = 0,9,18,28,37#Group2.groupID = S#Group2.nrofHosts = 2#Group2.router = DecisionEngineRouter#DecisionEngineRouter.decisionEngine = SelfishWithCommunityRouter#DecisionEngineRouter.filePathKnowledge = CommunityReality.txt## Message creation parameters # How many event generatorsEvents.nrof = 2# Class of the first event generatorEvents1.class = ExternalEventsQueue# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.filePath = Haggle3-Infocom5.csv# Haggle3-Infocom5.csv# RealityConnectionTraceFinal.txtEvents2.class = MessageEventGenerator# change interval to have more or less messages, see javadocs for more information.Events2.interval = 1160, 1240# 25, 30 (~120 texts/hour)# 290, 310 (~12 texts/hour) Reality# 580, 620 (~ 6 texts/hour)# 1160, 1240 (~ 3 texts/ hour) Haggle3 - Infocom5# 2320, 2480 (~ 1 texts/ hour)Events2.size = 250k,300k# Haggle3-Infocom5 250k,300k# Reality 20k 1/2 10k# range of message source/destination addressesEvents2.hosts = 0,40Events2.prefix = MEvents2.time = 0, 253283#274883 Haggle 3 infocom 5 253283#16981816 Reality 16377016 15772216## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 70# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 1000, 1000# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 2# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/EpidemicCommunity# Report classes to loadReport.report1 = TransmiteRecieveCountReportReport.report2 = RankPerNodeReport#Report.report3 = TotalContactReport#Report.report1 = CommunityDetectionReport## Default settings for some routers settings#ProphetRouter.secondsInTimeUnit = 30#SprayAndWaitRouter.nrofCopies = 6#SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$